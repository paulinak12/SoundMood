{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyM7ixQC1DE8VSN6LqV9+bba",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/paulinak12/SoundMood/blob/main/codigo%20para%20pagina%20web\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import streamlit as st\n",
        "import pandas as pd\n",
        "\n",
        "# Carga la base de datos\n",
        "@st.cache_data\n",
        "def load_data():\n",
        "    return pd.read_excel('Base de datos (1).xlsx')\n",
        "df = load_data()\n",
        "\n",
        "emociones = ['alegre', 'triste', 'relajado', 'romantico', 'divertido', 'motivado', 'estresado', 'ansioso', 'molesto']\n",
        "opciones_duracion = df['duracion'].dropna().unique()\n",
        "opciones_idioma = ['espa√±ol', 'ingl√©s']\n",
        "\n",
        "mejora_map = {\n",
        "    'triste': 'motivado',\n",
        "    'estresado': 'relajado',\n",
        "    'ansioso': 'relajado',\n",
        "    'molesto': 'relajado'\n",
        "}\n",
        "\n",
        "st.title('üéµ Recomendador de Canciones por Emoci√≥n')\n",
        "st.write('Elige tus opciones y recibe una canci√≥n sugerida seg√∫n c√≥mo te sientes y tus preferencias.')\n",
        "\n",
        "# Paso 1: Emoci√≥n\n",
        "st.subheader('1. ¬øC√≥mo te sientes hoy? (Emoci√≥n)')\n",
        "emocion = st.selectbox('Selecciona una emoci√≥n:', emociones, key='emocion')\n",
        "\n",
        "# Paso 2: Prop√≥sito si corresponde\n",
        "proposito = None\n",
        "if emocion in ['triste', 'estresado', 'ansioso', 'molesto']:\n",
        "    st.subheader('2. ¬øQu√© buscas en la canci√≥n?')\n",
        "    proposito = st.radio('',\n",
        "        ['Que acompa√±e lo que siento', 'Que mejore mi estado de √°nimo'], key='proposito')\n",
        "\n",
        "# Paso 3: Duraci√≥n\n",
        "st.subheader('3. ¬øPrefieres una canci√≥n corta o larga?')\n",
        "duracion_elegida = st.radio('', opciones_duracion, key='duracion')\n",
        "\n",
        "# Paso 4: Idioma\n",
        "st.subheader('4. ¬øEn qu√© idioma prefieres la canci√≥n?')\n",
        "idioma = st.radio('', opciones_idioma, key='idioma')\n",
        "\n",
        "# Paso 5: A√±o\n",
        "st.subheader('5. ¬øDe qu√© √©poca prefieres la canci√≥n?')\n",
        "epoca = st.radio('', ['hasta 2010', 'desde 2011'], key='epoca')\n",
        "\n",
        "# Determinar emoci√≥n final para filtro\n",
        "if proposito and proposito == 'Que mejore mi estado de √°nimo':\n",
        "    emocion_query = mejora_map.get(emocion, emocion)\n",
        "else:\n",
        "    emocion_query = emocion\n",
        "\n",
        "# Realizar filtro al presionar el bot√≥n\n",
        "if st.button('üé∂ Recomi√©ndame una canci√≥n'):\n",
        "    filtro = (\n",
        "        (df['emocion'].str.lower() == emocion_query.lower()) &\n",
        "        (df['duracion'].str.lower() == duracion_elegida.lower()) &\n",
        "        (df['idioma'].str.lower() == idioma.lower()) &\n",
        "        ((df['a√±o_exacto'] <= 2010) if epoca == 'hasta 2010' else (df['a√±o_exacto'] >= 2011))\n",
        "    )\n",
        "    resultado = df[filtro]\n",
        "    if not resultado.empty:\n",
        "        cancion = resultado.sample(1).iloc[0]\n",
        "        st.success('¬°Aqu√≠ tienes tu canci√≥n sugerida!')\n",
        "        st.markdown(f\"**{cancion['nombre_cancion']}** ‚Äî {cancion['nombre_artista']}  \")\n",
        "        st.markdown(f\"G√©nero: {cancion['genero']}\")\n",
        "        if pd.notnull(cancion['foto_artista']):\n",
        "            st.image(cancion['foto_artista'], width=200)\n",
        "        st.markdown(f\"Red social: [{cancion['red_social']}]({cancion['link_red_social']})\")\n",
        "        st.markdown(f\"\\n**Letra:**\\n{cancion['letra_cancion']}\")\n",
        "        st.markdown(f\"\\n**Informaci√≥n:** {cancion['info_cancion']}\")\n",
        "        st.markdown(f\"\\n[Spotify]({cancion['url_spotify']}) | [Video]({cancion['url_video']})\")\n",
        "    else:\n",
        "        st.warning('No se encontraron canciones para tu selecci√≥n.')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 383
        },
        "id": "6UACTBl4s_8Y",
        "outputId": "f35d00ad-2ed2-4a9b-c80b-35ef2474d753"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ModuleNotFoundError",
          "evalue": "No module named 'streamlit'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-23-2962720322.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mstreamlit\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mst\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Carga la base de datos\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m@\u001b[0m\u001b[0mst\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcache_data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'streamlit'",
            "",
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"
          ],
          "errorDetails": {
            "actions": [
              {
                "action": "open_url",
                "actionText": "Open Examples",
                "url": "/notebooks/snippets/importing_libraries.ipynb"
              }
            ]
          }
        }
      ]
    }
  ]
}