# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11pzPgb-vhYvgUTLJKYkaq_GPhj3Rdz9f
"""

import streamlit as st
import pandas as pd

# Carga la base de datos
@st.cache_data
def load_data():
    return pd.read_excel('Base de datos (1).xlsx')
df = load_data()

emociones = ['alegre', 'triste', 'relajado', 'romantico', 'divertido', 'motivado', 'estresado', 'ansioso', 'molesto']
opciones_duracion = df['duracion'].dropna().unique()
opciones_idioma = ['espa√±ol', 'ingl√©s']

mejora_map = {
    'triste': 'motivado',
    'estresado': 'relajado',
    'ansioso': 'relajado',
    'molesto': 'relajado'
}

st.title('üéµ Recomendador de Canciones por Emoci√≥n')
st.write('Elige tus opciones y recibe una canci√≥n sugerida seg√∫n c√≥mo te sientes y tus preferencias.')

# Paso 1: Emoci√≥n
st.subheader('1. ¬øC√≥mo te sientes hoy? (Emoci√≥n)')
emocion = st.selectbox('Selecciona una emoci√≥n:', emociones, key='emocion')

# Paso 2: Prop√≥sito si corresponde
proposito = None
if emocion in ['triste', 'estresado', 'ansioso', 'molesto']:
    st.subheader('2. ¬øQu√© buscas en la canci√≥n?')
    proposito = st.radio('',
        ['Que acompa√±e lo que siento', 'Que mejore mi estado de √°nimo'], key='proposito')

# Paso 3: Duraci√≥n
st.subheader('3. ¬øPrefieres una canci√≥n corta o larga?')
duracion_elegida = st.radio('', opciones_duracion, key='duracion')

# Paso 4: Idioma
st.subheader('4. ¬øEn qu√© idioma prefieres la canci√≥n?')
idioma = st.radio('', opciones_idioma, key='idioma')

# Paso 5: A√±o
st.subheader('5. ¬øDe qu√© √©poca prefieres la canci√≥n?')
epoca = st.radio('', ['hasta 2010', 'desde 2011'], key='epoca')

# Determinar emoci√≥n final para filtro
if proposito and proposito == 'Que mejore mi estado de √°nimo':
    emocion_query = mejora_map.get(emocion, emocion)
else:
    emocion_query = emocion

# Realizar filtro al presionar el bot√≥n
if st.button('üé∂ Recomi√©ndame una canci√≥n'):
    filtro = (
        (df['emocion'].str.lower() == emocion_query.lower()) &
        (df['duracion'].str.lower() == duracion_elegida.lower()) &
        (df['idioma'].str.lower() == idioma.lower()) &
        ((df['a√±o_exacto'] <= 2010) if epoca == 'hasta 2010' else (df['a√±o_exacto'] >= 2011))
    )
    resultado = df[filtro]
    if not resultado.empty:
        cancion = resultado.sample(1).iloc[0]
        st.success('¬°Aqu√≠ tienes tu canci√≥n sugerida!')
        st.markdown(f"**{cancion['nombre_cancion']}** ‚Äî {cancion['nombre_artista']}  ")
        st.markdown(f"G√©nero: {cancion['genero']}")
        if pd.notnull(cancion['foto_artista']):
            st.image(cancion['foto_artista'], width=200)
        st.markdown(f"Red social: [{cancion['red_social']}]({cancion['link_red_social']})")
        st.markdown(f"\n**Letra:**\n{cancion['letra_cancion']}")
        st.markdown(f"\n**Informaci√≥n:** {cancion['info_cancion']}")
        st.markdown(f"\n[Spotify]({cancion['url_spotify']}) | [Video]({cancion['url_video']})")
    else:
        st.warning('No se encontraron canciones para tu selecci√≥n.')